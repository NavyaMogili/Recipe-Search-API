{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Recipe","title","calories","image","ingredients","classes","useState","expanded","setExpanded","Card","className","CardHeader","subheader","CardMedia","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","map","ingredient","Typography","paragraph","text","padding","display","alignItems","width","input","spacing","flex","iconButton","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipe","a","axios","get","response","data","hits","console","log","Paper","onSubmit","e","preventDefault","component","InputBase","type","value","onChange","target","placeholder","inputProps","Grid","container","recipe","conainer","item","xs","md","lg","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a5b4567.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 325,\r\n    margin: \"15px 0\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n\r\n}));\r\n\r\n\r\nconst Recipe = ({title,calories,image, ingredients }) => {\r\n    const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n    return(\r\n        <div>\r\n            <Card className={classes.root}>\r\n      <CardHeader\r\n       \r\n        title={title}\r\n        subheader={calories}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image}\r\n        title={title}\r\n      />\r\n\r\n      <CardActions disableSpacing>\r\n       <div>\r\n           Ingredients\r\n       </div>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n         {ingredients && ingredients.map(ingredient => (\r\n                     <Typography paragraph>{ingredient.text}</Typography>\r\n         ))}\r\n\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n{/* \r\n            <p>{title}</p>\r\n            <p>{calories}</p>\r\n            <img src={image} alt=\"\"></img> */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport Recipe from './Recipe';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    margin: '10px auto',\n\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n \n}));\n\n\nfunction App() {\n    const classes = useStyles();\n  const APP_ID = \"d2deb56c\";\n  const APP_KEY = \"cb664b2799819104360ad614a798bdd4\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() =>{\n    getRecipe();\n  }, [query]);\n\n\n  const getRecipe = async () => { \n    const response =  await axios.get(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    setRecipes(response.data.hits);\n    console.log(response.data.hits);\n    };\n\nconst updateSearch = (e) => {\n  setSearch(e.target.value);\n\n};\n\nconst updateQuery = (e) => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch(\"\");\n}\nreturn (\n    <div>\n    <Paper\n     onSubmit={updateQuery} component=\"form\" className={classes.root}>\n     \n      <InputBase\n        type='text'\n        value={search} \n        onChange={updateSearch}\n        className={classes.input}\n        placeholder=\"Search For Recipes\"\n        inputProps={{ 'aria-label': 'search for recipes' }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      \n    </Paper>\n    \n      {/* <form onSubmit={updateQuery}>\n        <input type='text' value={search} onChange={updateSearch}/>\n          <button type=\"submit\">Search</button>\n      </form> */}\n      <div>\n      <Grid container>\n      {recipes.map((recipe) => (\n        <Grid conainer item={3} xs={6} md={4} lg={3} >\n        <Recipe \n        key = {recipe.recipe.label}\n        title = {recipe.recipe.label}\n        calories = {recipe.recipe.calories}\n        image = {recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n      />\n      </Grid>\n      ))}\n\n    </Grid>\n\n       <Recipe/>\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}